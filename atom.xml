<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oneNote</title>
  
  <subtitle>山河远阔 清风徐来</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://comosk.github.io/"/>
  <updated>2020-02-28T15:30:24.343Z</updated>
  <id>https://comosk.github.io/</id>
  
  <author>
    <name>л</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决eclipse中DDMS无法输出Logcat问题</title>
    <link href="https://comosk.github.io/2020/02/28/%E8%A7%A3%E5%86%B3eclipse%E4%B8%ADDDMS%E6%97%A0%E6%B3%95%E8%BE%93%E5%87%BALogcat%E9%97%AE%E9%A2%98/"/>
    <id>https://comosk.github.io/2020/02/28/%E8%A7%A3%E5%86%B3eclipse%E4%B8%ADDDMS%E6%97%A0%E6%B3%95%E8%BE%93%E5%87%BALogcat%E9%97%AE%E9%A2%98/</id>
    <published>2020-02-28T15:29:18.000Z</published>
    <updated>2020-02-28T15:30:24.343Z</updated>
    
    <content type="html"><![CDATA[<p>原因在于adt版本和android版本不兼容，解决办法进行升级ADT版本，升级至ADT-24.2</p><p><strong>升级步骤：</strong></p><ol><li>下载ADT-24.2，github地址：<a href="https://github.com/khaledev/ADT/releases" target="_blank" rel="noopener">https://github.com/khaledev/ADT/releases</a></li><li>打开eclipse，Help -&gt; Install New Software  -&gt; Add  -&gt; Archive，选择下载的ADT压缩文件</li><li>点击ok，选中Developer Tools选项，一直Accept，下一步操作，安装完成，重启eclipse，再次连接手机，logcat输出日志。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      adt版本和android版本不兼容，解决办法进行升级ADT版本
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全工具" scheme="https://comosk.github.io/tags/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>常见登录认证方式</title>
    <link href="https://comosk.github.io/2020/02/28/%E5%B8%B8%E8%A7%81%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E6%96%B9%E5%BC%8F/"/>
    <id>https://comosk.github.io/2020/02/28/%E5%B8%B8%E8%A7%81%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E6%96%B9%E5%BC%8F/</id>
    <published>2020-02-28T15:26:58.000Z</published>
    <updated>2020-02-28T15:28:10.596Z</updated>
    
    <content type="html"><![CDATA[<p>常见认证方式：</p><ol><li>HTTP Basic Auth</li><li>cookie Auth</li><li>Token Auth</li><li>OAuth2.0</li></ol><ul><li><h4 id="HTTP-Basic-Auth"><a href="#HTTP-Basic-Auth" class="headerlink" title="HTTP Basic Auth"></a>HTTP Basic Auth</h4></li></ul><p>最古老的认证方式。客户端在客户端记录用户名和密码，每次请求资源都要带上用户名和密码，后台服务器进行验证，验证通过之后就返回资源，现在基本废弃使用这种方式。尤其是对外提供接口更不能使用。</p><p> <img src="http://p1.pstatp.com/large/pgc-image/9dd5ae22dfe44c5d8d0592e920819caa" alt="网站登录认证方式"> </p><ul><li><h4 id="cookie-Auth"><a href="#cookie-Auth" class="headerlink" title="cookie Auth"></a>cookie Auth</h4><p>客户端创建Cookie对象，服务器端创建Session对象，通过客户端上的Cookie和服务端上的Seesion进行匹配实现状态的管理。默认关闭浏览器cookie会被删除，但可以修改cookie的expire time使在一定时间内有效。Session保存在服务器上，用户量很大会消耗服务器资源。</p><p> <img src="http://p3.pstatp.com/large/pgc-image/074c4fcfc5f94c6e9f78fea7f64ab452" alt="网站登录认证方式"> </p></li><li><h4 id="Token-Auth"><a href="#Token-Auth" class="headerlink" title="Token Auth"></a>Token Auth</h4><p>利用token认证是当前主流的认证方式。当用户进行登录时，服务端生成一串带有用户信息的JSON串，然后通过加密和编码，生成一个无规则的字符串，字符串即token，客户端进行保存好token，每次请求都会带着token，可以放在http的header中，也可以以参数的形式进行传递。服务端得到token之后通过解码解密的到用户信息。如果验证成功之后就会把资源返还给客户端 。</p><p><img src="http://p3.pstatp.com/large/pgc-image/3eca8b370ee74cecb707a21461acbf87" alt="网站登录认证方式"> </p></li></ul><p>token认证优势很多，可以支持跨域、跨平台，由于不用在服务端保存用户信息，可以减轻服务器端的压力，提高性能。针对Token认证有一套标准的JWT(JSON Web token)，目前(.NET、Rubu、Java、Python、PHP)都支持此标准。</p><ul><li><h4 id="OAuth认证"><a href="#OAuth认证" class="headerlink" title="OAuth认证"></a>OAuth认证</h4><p>OAuth认证目前版本为2.0。用户可以凭借令牌，而不是借用用户名和密码来访问特定服务器上的数据。每一个令牌授权给一个特定的第三方系统，在特定的时间内访问特定资源。用户可以借用OAuth授权第三方网站访问储存在另外的服务提供者的某些信息，而非全部内容。</p></li></ul><p>   <img src="E:%5CWeb%E5%AE%89%E5%85%A8%5C%E8%B5%84%E6%96%99%E6%A1%A3%5C%E6%96%87%E6%A1%A3%E9%85%8D%E5%9B%BE%5C5e27c9064ca22c7e54a1d395d679f8b5_r.jpg" alt="5e27c9064ca22c7e54a1d395d679f8b5_r">)<img src="http://p1.pstatp.com/large/pgc-image/1877a1805fbc47308bb664f01e435baf" alt="网站登录认证方式"> </p><p>  例：使用OAuth2.0的微信登录认证</p><p>  Step1. 用户通过授权，获取code</p><p>  Step2. 通过code换取网页授权access_token</p><p>  Step3. 刷新access_token</p><p>  Step4. 拉取用户信息（需scope为snsapi_userinfo)注：snsapi_userinfo获取openid和用户资料（昵称、头像、国、省、城市、性别、权限）</p><p>  当下QQ认证、新浪微博授权登录、支付宝授权登录等等都时使用这种认证方式。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      几种常见网站登录的认证方式……
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="基础知识" scheme="https://comosk.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>OAuth2.0协议</title>
    <link href="https://comosk.github.io/2020/02/28/OAuth2-0%E5%8D%8F%E8%AE%AE/"/>
    <id>https://comosk.github.io/2020/02/28/OAuth2-0%E5%8D%8F%E8%AE%AE/</id>
    <published>2020-02-28T15:25:03.000Z</published>
    <updated>2020-02-28T15:26:11.911Z</updated>
    
    <content type="html"><![CDATA[<p>OAuth2.0是用于授权的行业标准协议，允许用户授权第三方移动应用访问他们储存在另外的服务提供者上的信息，而不需要将用户名和密码提供给第三方移动应用或分享他们数据的所有内容。</p><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>了解几个专用名词</p><ul><li>Third-party application：第三方应用程序(后称“Client”)</li><li>HTTP service：HTTP服务提供商</li><li>Resource Owner:资源所有者(用户)</li><li>User Agent：用户代理(浏览器)</li><li>Authorization server：认证服务器</li><li>Resource server：资源服务器</li></ul><h3 id="0x01-OAuth简单介绍"><a href="#0x01-OAuth简单介绍" class="headerlink" title="0x01 OAuth简单介绍"></a>0x01 OAuth简单介绍</h3><p>OAuth在“第三方应用程序”和”服务提供商”之间设置了一层授权层（authorization layer)。”第三方应用程序”不能直接登录“服务提供商”，只能登录授权层，将第三方应用程序与用户隔开。“第三方应用程序”登录授权层所用的令牌（token)与用户的密码不同。指定授权层的权限范围和有效期是可以指定的。</p><p>“第三方应用程序”登录到授权层，依靠令牌指定的范围和权限进行开放储存资源服务器上的资源。</p><h3 id="0x02-OAuth2-0运行流程"><a href="#0x02-OAuth2-0运行流程" class="headerlink" title="0x02 OAuth2.0运行流程"></a>0x02 OAuth2.0运行流程</h3><p><img src="http://www.ruanyifeng.com/blogimg/asset/2014/bg2014051203.png" alt="OAuth运行流程"></p><p>A. 用户打开“第三方应用程序”后，”第三方应用程序“要求用户给予授权。</p><p>B. 用户同意给予客户端授权</p><p>C. 客户端得到授权后，向认证服务器进行申请令牌（token)</p><p>D. 认证服务器对客户端进行认证，验证正确后发放令牌</p><p>E. 客户端利用令牌向资源服务器申请获取资源</p><p>F. 资源服务器确认令牌正确后，同意向客户端开发资源</p><p>其中关键的步骤是B，用户如何给客户端进行授权</p><h3 id="0x03-客户端授权模式、"><a href="#0x03-客户端授权模式、" class="headerlink" title="0x03 客户端授权模式、"></a>0x03 客户端授权模式、</h3><p>OAuth2.0指定了四种授权方式</p><ul><li><p>授权码模式（authorization code)</p></li><li><p>简化模式（implicit）</p></li><li><p>密码模式（resource owner password credentials)</p></li><li><p>客户端模式（client credentials)</p><h4 id="授权码模式"><a href="#授权码模式" class="headerlink" title="授权码模式"></a>授权码模式</h4><p>授权码模式（authorization code)是功能最完整、流程最严密的授权模式。特点是通过客户端的后台服务器与“服务提供商”的认证服务器进行互动。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2014/bg2014051204.png" alt="授权码模式"> </p></li></ul><p>步骤如下：</p><p>A. 用户访问客户端，客户端将用户端导向认证服务器</p><p>B. 用户选择是否给予客户端授权</p><p>C. 假设用户给予授权，认证服务器将用户导向客户端事先指定的“重定向URL”(redirection URL)，同时附上一个授权码。</p><p>D. 客户端收到授权码，附上早先的”重定向URL“，向认证服务器申请令牌。此步骤对用户不可见。</p><p>E. 认证服务器核对了授权码和重定向URL，确认无误后，向客户端发送访问令牌（Access Token）和更新令牌（refresh token)。</p><p>以上步骤所需参数</p><p>A. 客户端申请认证的URL，包含以下参数：</p><ul><li>response_type：表示授权类型，必选项。值固定为”code”</li><li>client_id：表示客户端的ID，必选项</li><li>redirect_uri：表示重定向URL，可选项</li><li>scope：表示申请的权限范围，可选项</li><li>state：表示当前客户端的状态，可以指定任意值，认证服务器会原封不动的返回这个值</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      OAuth2.0是用于授权的行业标准协议，允许用户授权第三方移动应用访问他们储存在另外的服务提供者上的信息，而不需要将用户名和密码提供给第三方移动应用或分享他们数据的所有内容。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="基础知识" scheme="https://comosk.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS连接过程和中间人攻击</title>
    <link href="https://comosk.github.io/2020/02/28/HTTPS%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%A8%8B%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>https://comosk.github.io/2020/02/28/HTTPS%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%A8%8B%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/</id>
    <published>2020-02-28T15:22:52.000Z</published>
    <updated>2020-02-28T15:24:14.556Z</updated>
    
    <content type="html"><![CDATA[<p>大致过程如下：</p><ol><li><p>https请求</p><p>客户端向服务端发送https请求；</p></li><li><p>生成公钥和私钥</p><p>服务端收到请求之后，生成公钥和私钥。</p></li><li><p>返回公钥</p><p>服务端将公钥返回给服务端。公钥里包含很多信息，比如证书的颁发机构、过期时间等</p></li><li><p>客户端验证公钥</p><p>客户端收到公钥之后，验证是否有效。验证证书的颁发机构、过期时间等。如果验证不通过则会抛出异常，显示证书存在问题。如果验证通过，则会生成一个随机值，作为客户端的密钥，然后用服务端的公钥进行加密。</p></li><li><p>发送客户端密钥</p><p>客户端用服务端的公钥加密密钥，然后发送给服务端</p></li><li><p>服务端接收密钥，对称加密内容</p><p>服务端收到经过加密的密钥，然后私钥将其进行解密，得到客户端的密钥，然后服务端将要传输的内容，用客户端得密钥进行对称加密。</p></li><li><p>加密传输</p><p>服务端将经过加密的内容传输给客户端</p></li><li><p>获取加密内容，解密</p><p>客户端获取加密内容后，利用之前生成的随机值作为密钥进行解密，获取到内容。</p></li></ol><p>中间人进行劫持攻击时，关键在于信任中间人的证书。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      HTTPS连接的过程详情……
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="基础知识" scheme="https://comosk.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：任意文件上传</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2020-02-28T15:20:37.000Z</published>
    <updated>2020-02-28T15:21:39.614Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：高</p><p>要求：文件上传时应该验证文件的类型、文件头信息、大小</p><p>No 1. 漏洞危害</p><p>可以通过恶意脚本文件控制整个网站、甚至控制服务器。恶意文件又被称为WebShell,网页后门。可以查看服务器目录、服务器中的文件、执行系统命令等。</p><p>No  2. 检测是否存在JS绕过攻击</p><ul><li>使用浏览器的插件，删除检测文件后缀的JS检测代码，然后上传文件即可。【注：插件可选择Firebox]</li><li>首先先把文件后缀改成允许上传的，饶过JS的检测，再抓包，再把后缀名改成可执行文件的后缀名即可上传成功。【抓包工具可选择Burp suite】</li></ul><p>No 3. 检测是否存在文件后缀绕过攻击</p><ul><li>服务器代码限制了某些后缀名不允许上传，但是可以允许解析其他文件后缀的。检测httpd.conf的配置文件，查看解析的文件后缀。apache的解析顺序是从右往左解析，直到遇见能解析的文件后缀为止。</li></ul><p>No 4. 检测是否存在文件类型绕过攻击</p><ul><li>通过Burp suite抓取数据包，检测如果上传不同格式的文件时，文件属性是不同的，如果服务端是通过文件类型来判断文件类型的，那么有可能存在被绕过的可能。因为文件类型是通过客户端传递，可以随意修改的。【在PHP语言中存在着一种类似的文件上传漏洞，如果是利用getimagesize()函数来获取图片长、宽、高等信息，如果不是图片就上传不成功，可以将图片和Webshell合并成一个文件，可以使用命令 cat test.php webshell.php &gt; test.php 可以绕过限制】</li></ul><p>No 5. 检测是否存在文件截断绕过攻击</p><ul><li>截断条件：PHP版本小于5.3.4，PHP的magic_quotes_gpc为OFF状态</li><li>截断符 %00，文件上传时，会把截断后的内容放在上传后文件名的第一部分，然后将按时间生成的文件名作为上传文件名的第二部门。【例：如果参数为1.php%00.jpg,那么将会变成1.php，就成功上传了webshell脚本】</li></ul><p>No 6. 检测是否存在竞争条件攻击</p><ul><li>利用检测和删除文件中间的时间，进行生成一个webShell的脚本文件，完成webShell文件的上传。</li></ul><ol><li><p>上传时检查不严。</p><ul><li>利用断点上传工具，来应当对只在客户端进行过滤。</li><li>在服务器端进行黑名单检查时，忽略了大小写。</li><li>在服务器进行白名单检查时，忽略%00的截断符。例只允许上传jpg,就可以构造XXX.exe%00.jpg,在服务端就可以变成xxx.exe</li><li>上传成功后修改后缀名，修改文件后缀名处理不当</li><li>若使用插件时，插件上可能带有文件上传漏洞</li></ul></li><li><p>防范文件上传漏洞</p><ul><li>文件上传目录设置成不可执行</li><li>判断文件类型。结合MIME Type、后缀检测方式。选择白名单</li><li>使用随机数改写文件名和文件路径</li><li>单独设置文件服务器的域名</li></ul><p>防御</p><ul><li>严格检查文件名和文件路径</li><li>服务端使用白名单进行过滤，然后截断符进行检测，HTTP的Content-type进行检测，同时也检测文件上传的大小</li><li>对上传的文件进行重命名。</li></ul></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      可以通过恶意脚本文件控制整个网站、甚至控制服务器。恶意文件又被称为WebShell,网页后门。可以查看服务器目录、服务器中的文件、执行系统命令等。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="任意文件上传/下载" scheme="https://comosk.github.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：任意文件下载/读取</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD-%E8%AF%BB%E5%8F%96/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD-%E8%AF%BB%E5%8F%96/</id>
    <published>2020-02-28T15:18:48.000Z</published>
    <updated>2020-02-28T15:20:12.166Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：High</p><p>漏洞类型：任意文件上传/下载漏洞</p><p>安全要求：文件下载应该验证文件的类型、文件头信息、大小、权限</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>某些网站由于业务需求，往往需要提供文件查看或文件下载功能，但是如果对用户查看或下载的文件不做限制，则恶意用户就能查看或下载任意敏感文件。即任意文件下载/读取漏洞。</p><p><strong>引起原因：</strong></p><ul><li>存在读文件的函数</li><li>读取文件的路径用户可控且未校验或校验不严</li><li>输出了文件内容</li></ul><h3 id="0x01-漏洞危害"><a href="#0x01-漏洞危害" class="headerlink" title="0x01 漏洞危害"></a>0x01 漏洞危害</h3><p>下载服务器任意文件，如脚本代码、服务及系统配置文件等，可以得到进一步代码审计，得到更多的可利用漏洞。</p><p><a href="https://shuimugan.com/bug/view?bug_no=62787" target="_blank" rel="noopener">wooyun文件任意下载实例</a></p><h3 id="0x02-任意文件读取"><a href="#0x02-任意文件读取" class="headerlink" title="0x02 任意文件读取"></a>0x02 任意文件读取</h3><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"test.txt"</span>;</span><br><span class="line">    readfile($filename);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"test.txt"</span>;</span><br><span class="line"></span><br><span class="line">    $fp = fopen($filename,<span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">    $data = fread($fp,filesize($filename));</span><br><span class="line">    fclose($fp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $data;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"test.txt"</span>;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="0x03-任意文件下载"><a href="#0x03-任意文件下载" class="headerlink" title="0x03 任意文件下载"></a>0x03 任意文件下载</h3><p>直接下载：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.xx.com/a.zip"</span>&gt;</span>Download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>header()下载</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"uploads/201607141437284653.jpg"</span>;</span><br><span class="line"></span><br><span class="line">    header(<span class="string">'Content-Type: imgage/jpeg'</span>);</span><br><span class="line">    header(<span class="string">'Content-Disposition: attachment; filename='</span>.$filename);</span><br><span class="line">    header(<span class="string">'Content-Lengh: '</span>.filesize($filename));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="0x04-利用代码"><a href="#0x04-利用代码" class="headerlink" title="0x04 利用代码"></a>0x04 利用代码</h3><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">readfile.php?file=/etc/passwd</span><br><span class="line">readfile.php?file=../../../../../../../../etc/passwd</span><br><span class="line">readfile.php?file=../../../../../../../../etc/passwd%<span class="number">00</span></span><br></pre></td></tr></tbody></table></figure><p><strong>Google search</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inurl:<span class="string">"readfile.php?file="</span></span><br><span class="line">inurl:<span class="string">"read.php?filename="</span></span><br><span class="line">inurl:<span class="string">"download.php?file="</span></span><br><span class="line">inurl:<span class="string">"down.php?file="</span></span><br><span class="line">等等...</span><br></pre></td></tr></tbody></table></figure><h3 id="0x05-漏洞挖掘"><a href="#0x05-漏洞挖掘" class="headerlink" title="0x05 漏洞挖掘"></a>0x05 漏洞挖掘</h3><p>利用Google hacking或web漏洞扫描器</p><p>链接形式上：</p><ul><li>readfile.php?file=***.txt</li><li>download.php?file=***.rar</li></ul><p>从参数名看：</p><ul><li>&amp;RealPath=</li><li>&amp;FilePath=</li><li>&amp;filepath=</li><li>&amp;Path=</li><li>&amp;path</li><li>&amp;inputFile=</li><li>&amp;url=</li><li>&amp;urls=</li><li>&amp;Lang=</li><li>&amp;dis=</li><li>&amp;data=</li><li>&amp;readfile=</li><li>&amp;filep=</li><li>&amp;src=</li><li>&amp;menu=</li><li>META-INF</li><li>WEB-INF</li></ul><h3 id="0x06-常见敏感文件"><a href="#0x06-常见敏感文件" class="headerlink" title="0x06 常见敏感文件"></a>0x06 常见敏感文件</h3><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Windows：</span><br><span class="line">   C:\boot.ini  <span class="comment">//查看系统版本</span></span><br><span class="line">   C:\Windows\System32\inetsrv\MetaBase.xml  <span class="comment">//IIS配置文件</span></span><br><span class="line">   C:\Windows\repair\sam  <span class="comment">//存储系统初次安装的密码</span></span><br><span class="line">   C:\Program Files\mysql\my.ini  <span class="comment">//Mysql配置</span></span><br><span class="line">   C:\Program Files\mysql\<span class="keyword">data</span>\mysql\user.MYD  <span class="comment">//Mysql root</span></span><br><span class="line">   C:\Windows\php.ini  <span class="comment">//php配置信息</span></span><br><span class="line">   C:\Windows\my.ini  <span class="comment">//Mysql配置信息</span></span><br><span class="line">   ...</span><br><span class="line">Linux：</span><br><span class="line">   /root/.ssh/authorized_keys</span><br><span class="line">   /root/.ssh/id_rsa</span><br><span class="line">   /root/.ssh/id_ras.keystore</span><br><span class="line">   /root/.ssh/known_hosts</span><br><span class="line">   /etc/passwd</span><br><span class="line">   /etc/shadow</span><br><span class="line">   /etc/my.cnf</span><br><span class="line">   /etc/httpd/conf/httpd.conf</span><br><span class="line">   /root/.bash_history</span><br><span class="line">   /root/.mysql_history</span><br><span class="line">   /proc/self/fd/fd[<span class="number">0</span>-<span class="number">9</span>]*(文件标识符)</span><br><span class="line">   /proc/mounts</span><br><span class="line">   /porc/config.gz</span><br></pre></td></tr></tbody></table></figure><h3 id="0x07-漏洞验证"><a href="#0x07-漏洞验证" class="headerlink" title="0x07 漏洞验证"></a>0x07 漏洞验证</h3><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">• index.php?f=../../../../../../etc/passwd </span><br><span class="line">• index.php?f=../index.php </span><br><span class="line">• index.php?f=ﬁle:<span class="comment">///etc/passwd</span></span><br><span class="line">注：当参数f的参数值为php文件时，若是文件被解析则是文件包含漏洞，</span><br><span class="line">    若显示源码或提示下载则是文件查看与下载漏洞</span><br></pre></td></tr></tbody></table></figure><h3 id="0x08-安全建议"><a href="#0x08-安全建议" class="headerlink" title="0x08 安全建议"></a>0x08 安全建议</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 过滤.(点)，使用户在<span class="selector-tag">url</span>中不能回溯上级目录</span><br><span class="line">* 正则严格判断用户输入参数的格式</span><br><span class="line">* <span class="selector-tag">php</span><span class="selector-class">.ini</span>配置<span class="selector-tag">open_basedir</span>限定文件访问范围</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      某些网站由于业务需求，往往需要提供文件查看或文件下载功能，但是如果对用户查看或下载的文件不做限制，则恶意用户就能查看或下载任意敏感文件。即任意文件下载/读取漏洞。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="任意文件上传/下载" scheme="https://comosk.github.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：任意文件删除</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/</id>
    <published>2020-02-28T15:16:06.000Z</published>
    <updated>2020-02-28T15:17:29.074Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：High</p><p>漏洞类型：任意文件上传/下载</p><p>安全要求：文件删除应该验证文件的类型、权限</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>Web项目中，设计文件删除操作的函数，如果文件名可控，将可能存在任意文件删除漏洞，该漏洞可能让攻击者随意删除服务器上的任意文件。</p><h3 id="0x01-测试方法"><a href="#0x01-测试方法" class="headerlink" title="0x01 测试方法"></a>0x01 测试方法</h3><p>任意删除文件漏洞常存在于删除头像、文章附件、CMS管理插件、模块、数据库备份删除的地方和文件重写的地方，通常来说文件的删除需要严格控制用户的权限和资源所有对象，任意文件删除主要再鱼寻找类似PHP中的unlink()函数或者文件覆盖的一些函数。</p><h3 id="0x02-示例演示"><a href="#0x02-示例演示" class="headerlink" title="0x02 示例演示"></a>0x02 示例演示</h3><p><strong>示例为Discuz&lt;=3.4 任意文件删除漏洞</strong></p><p> <img src="https://upload-images.jianshu.io/upload_images/7119304-abb92c6834681bb8.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt="img"> </p><ol><li><p>利用Burp suite进行抓包，得到formhash，并在brithprovince中改成问哦们要删除的文件路径（../../../test.txt），此时参数为文件站点存在的文件，就是要删除的文件。</p><p><img src="https://upload-images.jianshu.io/upload_images/7119304-6bb7d5d7824d2b18.png" alt="img"></p></li></ol><p> <img src="https://upload-images.jianshu.io/upload_images/7119304-635847de4be3f9fd.png" alt="img"> </p><ol><li><p>在本地创建执行更改服务器的表单，同时构造请求去执行删除的文件。请求home？php?mod=spacecp&amp;ac=profile&amp;op=base POST birthprovince=../../../test.txt&amp;profilesublimit=1&amp;formhash=2fce4b73</p><p>其中formhash为用户hash</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://127.0.0.1:8080/code_audit/Discuz_X3.3_SC_UTF8/upload/home.php?mod=spacecp&amp;ac=profile&amp;op=base method="</span><span class="attr">POST</span>" <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"birthprovince"</span> <span class="attr">id</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"formhash"</span> <span class="attr">value</span>=<span class="string">"a7ccdf77"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"profilesubmit"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/7119304-214cf6322bae7363.png" alt="img"> </p></li></ol><h3 id="0x03-示例分析"><a href="#0x03-示例分析" class="headerlink" title="0x03 示例分析"></a>0x03 示例分析</h3><p>漏洞出现在/upload/source/include/spacecp/spacecp_profile.php<img src="https://upload-images.jianshu.io/upload_images/7119304-14e559ceb8352cbc.png" alt="img"> </p><p>第182、183行有两个unlink()函数是可以删除文件，但是前提条件是需要formtype=file才可以</p><p> <img src="https://upload-images.jianshu.io/upload_images/7119304-c4432975c08878b9.png" alt="img"> </p><p>由于不是不是file所以继续往下看</p><p> <img src="https://upload-images.jianshu.io/upload_images/7119304-123a3e4ce841c30f.png" alt="img"> </p><p>第229行存在unlink()函数吗，并且无任何判断，即程序运行到此处就可以删除文件</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@unlink</span>(getglobal('setting/attachdir').'./profile/'.$space[$key]);</span><br></pre></td></tr></tbody></table></figure><p>回溯发现$space[$key]</p><p> <img src="https://upload-images.jianshu.io/upload_images/7119304-a170e7cf10ffbcff.png" alt="img"> </p><p>此处就是用户的个人设置，选择brith[rovince]，更改成要删除的文件就ok了，然后实现文件上传的表单，就可以删除文件。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Web项目中，设计文件删除操作的函数，如果文件名可控，将可能存在任意文件删除漏洞，该漏洞可能让攻击者随意删除服务器上的任意文件。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="任意文件上传/下载" scheme="https://comosk.github.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：中间件信息泄露</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</id>
    <published>2020-02-28T15:14:16.000Z</published>
    <updated>2020-02-28T15:15:21.789Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Low</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：查看前端返回的信息中是否包含中间件版本信息</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>​        什么是中间件版本信息泄露？通常在HTTP报文的响应头中存在的标志、版本号等信息均属于中间件的版本信息泄露。</p><p>​        特点是：通常出现在默认安装好的Web中间件上，大部分管理员不会修改这个标志。</p><p>​        原理是：各大Web服务中间件为了打造品牌效应而在HTTP响应头中添加了标志信息、版本号。</p><h3 id="0x01-常见场景"><a href="#0x01-常见场景" class="headerlink" title="0x01 常见场景"></a>0x01 常见场景</h3><ul><li>Tomcat</li><li>Nginx</li><li>Apache</li><li>IIS</li><li>……均有此类现象</li></ul><h3 id="0x02-测试方案"><a href="#0x02-测试方案" class="headerlink" title="0x02 测试方案"></a>0x02 测试方案</h3><p>使用CURL发送OPTIONS、GET、POST、HEAD等请求，查看响应头中的Server行</p><p>命令：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -X GET http://payloads.online</span><br></pre></td></tr></tbody></table></figure><h3 id="0x03-修复方案"><a href="#0x03-修复方案" class="headerlink" title="0x03 修复方案"></a>0x03 修复方案</h3><ul><li><p>Apache</p><p>将以下配置加入<code>conf/httpd.conf</code></p></li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ServerTokens Prod</span><br><span class="line"></span><br><span class="line">ServerSignaturre Off</span><br></pre></td></tr></tbody></table></figure><ul><li><p>PHP</p><p>修改<code>php.ini</code>，将<code>expose_php On</code>改为<code>expose_php Off</code></p></li><li><p>IIS</p><p>找到<code>HTTP响应头</code>设置响应报文内容，可以将<code>ASP.NET</code>随意更改，甚至删除</p></li><li><p>Nginx</p><p>将以下配置加入<code>conf/nginx.conf</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server_tokens off;</span><br></pre></td></tr></tbody></table></figure></li><li><p>Tomcat</p><p>到apache-tomcat安装目录下的lib子文件夹，找到catalina.jar这包，并进行解解压 </p><p>修改： <code>lib\catalina.zip\org\apache\catalina\util\ServerInfo.properties</code> </p></li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.info=X</span><br><span class="line">server.number=5.5</span><br><span class="line">server.built=Dec 1 2015 22:30:46 UTC</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      什么是中间件版本信息泄露？通常在HTTP报文的响应头中存在的标志、版本号等信息均属于中间件的版本信息泄露。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：文件遍历</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86/</id>
    <published>2020-02-28T15:12:46.000Z</published>
    <updated>2020-02-28T15:13:51.392Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Medium</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：使用Web扫描器进行检测，参数导致的系统文件任意访问。</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>文件遍历可以浏览Web目录下的文件列表，可能会泄露重要文件。文件遍历的利用方法是通过路径直接访问资源，文件遍历的危害比目录遍历的危害大，文件遍历不仅可以泄露网站的结构，攻击者还可以直接获取网站文件的内容。攻击者可以获得很多机密的文件，比如配置文件、比如/etc/passwd，如脚本代码、可以得到代码进一步代码审计，得到更多可以利用的漏洞。</p><h3 id="0x01-检测方法"><a href="#0x01-检测方法" class="headerlink" title="0x01 检测方法"></a>0x01 检测方法</h3><ul><li>通过Web漏洞扫描工具对网站实施扫描可能发现任意文件读取漏洞，发送一系列”../“字符来遍历高层目录，并且尝试找到系统的配置文件或者系统中存在的敏感文件。</li><li>通过判断网站语言，并根据url中部分提供的参数，进行构造相关的路径信息，如收集到网站中间件版本为Apache，则可以通过构造../../../WEB-INF/web.xml等，然后查看其是否可以被读取出来。</li><li>对于有WAF过滤 ../，可以构造 /.%252e/.%252e/.%252e/，%25对应的是%，%2e对应的是.，所以.%252e/对应的是 ../</li></ul><h3 id="0x02-常见路径"><a href="#0x02-常见路径" class="headerlink" title="0x02 常见路径"></a>0x02 常见路径</h3><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">Windows：</span><br><span class="line"><span class="symbol">   C:</span>\boot.ini  <span class="comment">//查看系统版本</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\System32\inetsrv\MetaBase.xml  <span class="comment">//IIS配置文件</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\repair\sam  <span class="comment">//存储系统初次安装的密码</span></span><br><span class="line"><span class="symbol">   C:</span>\Program Files\mysql\my.ini  <span class="comment">//Mysql配置</span></span><br><span class="line"><span class="symbol">   C:</span>\Program Files\mysql\data\mysql\user.MYD  <span class="comment">//Mysql root</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\php.ini  <span class="comment">//php配置信息</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\my.ini  <span class="comment">//Mysql配置信息</span></span><br><span class="line">   ...</span><br><span class="line">Linux：</span><br><span class="line">   <span class="meta-keyword">/etc/</span>passwd                  <span class="meta">#查看用户文件</span></span><br><span class="line">   <span class="meta-keyword">/etc/</span>shadow                  <span class="meta">#查看密码文件</span></span><br><span class="line">   <span class="meta-keyword">/etc/</span>my.cnf </span><br><span class="line">   <span class="meta-keyword">/etc/</span>httpd<span class="meta-keyword">/conf/</span>httpd.conf   <span class="meta">#查看apache的配置文件</span></span><br><span class="line">   <span class="meta-keyword">/root/</span>.bash_history          <span class="meta">#查看历史命令</span></span><br><span class="line">   <span class="meta-keyword">/root/</span>.mysql_history         <span class="meta">#mysql历史命令记录文件</span></span><br><span class="line">   <span class="meta-keyword">/var/</span>lib<span class="meta-keyword">/mlocate/</span>mlocate.db  <span class="meta">#本地所有文件信息</span></span><br><span class="line">   <span class="meta-keyword">/etc/</span>ssh/sshd_config         <span class="meta">#ssh配置文件，如果对外开放可看到端口</span></span><br><span class="line">   <span class="meta-keyword">/proc/</span>self<span class="meta-keyword">/fd/</span>fd[<span class="number">0</span><span class="number">-9</span>]*(文件标识符)</span><br><span class="line">   <span class="meta-keyword">/proc/</span>mounts</span><br><span class="line">   <span class="meta-keyword">/porc/</span>config.gz</span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/authorized_keys                </span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/id_rsa  </span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/id_ras.keystore</span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/known_hosts</span><br><span class="line">程序的配置文件</span><br><span class="line">apache：</span><br><span class="line">    <span class="meta-keyword">/etc/</span>httpd<span class="meta-keyword">/conf/</span>httpd.conf</span><br><span class="line">    <span class="meta-keyword">/etc/</span>apache2/httpd.conf</span><br><span class="line">    <span class="meta-keyword">/etc/</span>apache2/apache2.conf</span><br><span class="line">nginx：</span><br><span class="line">    <span class="meta-keyword">/etc/</span>nginx/nginx.conf</span><br><span class="line">    <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>conf/nginx.conf</span><br><span class="line">    <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/etc/</span>nginx/nginx.conf</span><br><span class="line">redis：</span><br><span class="line">    <span class="meta-keyword">/etc/</span>redis.conf</span><br><span class="line">index.php?f=../../../../../..<span class="meta-keyword">/etc/</span>passwd </span><br><span class="line">Windows：</span><br><span class="line"><span class="symbol">   C:</span>\boot.ini  <span class="comment">//查看系统版本</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\System32\inetsrv\MetaBase.xml  <span class="comment">//IIS配置文件</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\repair\sam  <span class="comment">//存储系统初次安装的密码</span></span><br><span class="line"><span class="symbol">   C:</span>\Program Files\mysql\my.ini  <span class="comment">//Mysql配置</span></span><br><span class="line"><span class="symbol">   C:</span>\Program Files\mysql\data\mysql\user.MYD  <span class="comment">//Mysql root</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\php.ini  <span class="comment">//php配置信息</span></span><br><span class="line"><span class="symbol">   C:</span>\Windows\my.ini  <span class="comment">//Mysql配置信息</span></span><br><span class="line">   ...</span><br><span class="line">Linux：</span><br><span class="line">   <span class="meta-keyword">/etc/</span>passwd                  <span class="meta">#查看用户文件</span></span><br><span class="line">   <span class="meta-keyword">/etc/</span>shadow                  <span class="meta">#查看密码文件</span></span><br><span class="line">   <span class="meta-keyword">/etc/</span>my.cnf </span><br><span class="line">   <span class="meta-keyword">/etc/</span>httpd<span class="meta-keyword">/conf/</span>httpd.conf   <span class="meta">#查看apache的配置文件</span></span><br><span class="line">   <span class="meta-keyword">/root/</span>.bash_history          <span class="meta">#查看历史命令</span></span><br><span class="line">   <span class="meta-keyword">/root/</span>.mysql_history         <span class="meta">#mysql历史命令记录文件</span></span><br><span class="line">   <span class="meta-keyword">/var/</span>lib<span class="meta-keyword">/mlocate/</span>mlocate.db  <span class="meta">#本地所有文件信息</span></span><br><span class="line">   <span class="meta-keyword">/etc/</span>ssh/sshd_config         <span class="meta">#ssh配置文件，如果对外开放可看到端口</span></span><br><span class="line">   <span class="meta-keyword">/proc/</span>self<span class="meta-keyword">/fd/</span>fd[<span class="number">0</span><span class="number">-9</span>]*(文件标识符)</span><br><span class="line">   <span class="meta-keyword">/proc/</span>mounts</span><br><span class="line">   <span class="meta-keyword">/porc/</span>config.gz</span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/authorized_keys                </span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/id_rsa  </span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/id_ras.keystore</span><br><span class="line">   <span class="meta-keyword">/root/</span>.ssh/known_hosts</span><br><span class="line"> </span><br><span class="line">程序的配置文件</span><br><span class="line">apache：</span><br><span class="line">    <span class="meta-keyword">/etc/</span>httpd<span class="meta-keyword">/conf/</span>httpd.conf</span><br><span class="line">    <span class="meta-keyword">/etc/</span>apache2/httpd.conf</span><br><span class="line">    <span class="meta-keyword">/etc/</span>apache2/apache2.conf</span><br><span class="line"> </span><br><span class="line">nginx：</span><br><span class="line">    <span class="meta-keyword">/etc/</span>nginx/nginx.conf</span><br><span class="line">    <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>conf/nginx.conf</span><br><span class="line">    <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/etc/</span>nginx/nginx.conf</span><br><span class="line"> </span><br><span class="line">redis：</span><br><span class="line">    <span class="meta-keyword">/etc/</span>redis.conf</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">index.php?f=../../../../../..<span class="meta-keyword">/etc/</span>passwd</span><br></pre></td></tr></tbody></table></figure><h3 id="0x03-文件遍历的危害"><a href="#0x03-文件遍历的危害" class="headerlink" title="0x03 文件遍历的危害"></a>0x03 文件遍历的危害</h3><ul><li>下载源代码审计</li><li>数据库备份</li><li>信息收集</li><li>中间件</li></ul><h3 id="0x04-安全建议"><a href="#0x04-安全建议" class="headerlink" title="0x04 安全建议"></a>0x04 安全建议</h3><ul><li>净化数据：对用户传送过来的文件名参数统一进行编码，对文件类型进行白名单控制，对包含恶意字符或者空字符的参数进行拒绝。</li><li>文件放在web无法直接访问的目录下</li></ul><h3 id="0x05-漏洞实例"><a href="#0x05-漏洞实例" class="headerlink" title="0x05 漏洞实例"></a>0x05 漏洞实例</h3><p> <a href="https://shuimugan.com/bug/view?bug_no=105069" target="_blank" rel="noopener">文件遍历导致敏感信息泄露</a> </p><p><a href="https://www.secpulse.com/archives/24602.html" target="_blank" rel="noopener">途牛文件遍历导致敏感信息泄露</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      使用Web扫描器进行检测，参数导致的系统文件任意访问。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：目录遍历</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86/</id>
    <published>2020-02-28T15:11:07.000Z</published>
    <updated>2020-02-28T15:12:20.584Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Medium</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：使用Web扫描器进行检测，设置不当导致的可向不用能访问的目录遍历</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>当客户端访问一个目录时,Web服务中间件将默认寻找一个<code>index list</code>中的文件，若文件不存在，则会列出当前目录下所有文件或返回403状态码，而列出目录下所有文件的行为称为目录遍历。</p><p>原因是中间件配置不得当</p><h3 id="0x01-常见场景"><a href="#0x01-常见场景" class="headerlink" title="0x01 常见场景"></a>0x01 常见场景</h3><ul><li>Tomcat</li><li>Nginx</li><li>Apache</li><li>IIS</li><li>……等服务器</li></ul><h3 id="0x02-测试方法"><a href="#0x02-测试方法" class="headerlink" title="0x02 测试方法"></a>0x02 测试方法</h3><p>利用dirb扫描一些存在的目录，再用浏览器访问已存在的目录，查看是否能够列出目录下的文件</p><p>命令：<code>dirb http://target</code></p><p> <img src="https://rvn0xsy.oss-cn-shanghai.aliyuncs.com/2018-04-27/0x02.gif" alt="0x02"> </p><h3 id="0x03-修复方案"><a href="#0x03-修复方案" class="headerlink" title="0x03 修复方案"></a>0x03 修复方案</h3><ul><li><p><strong>Apache</strong> </p><p>修改站点目录对应的配置文件</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Directory</span>/&gt;</span></span><br><span class="line">Options +Indexes +FollowSymLinks # 将 “+” 与Indexes去掉即可列出目录索引</span><br><span class="line">AllowOverride All</span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from all</span><br><span class="line">Require all granted</span><br><span class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul><p>修改后</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Directory</span>/&gt;</span></span><br><span class="line">Options FollowSymLinks </span><br><span class="line">AllowOverride All</span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from all</span><br><span class="line">Require all granted</span><br><span class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li><p><strong>Tomcat</strong></p><p>修改conf/web.xml配置文件</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>listings<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span><span class="comment">&lt;!-- 将true改成false --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>修改后</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>listings<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>Nginx</strong></p><p>修改conf/nginx.conf配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / {</span><br><span class="line">index index.html index.htm index.php 1.php;</span><br><span class="line">autoindex on;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>修改后</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / {</span><br><span class="line">index index.html index.htm index.php 1.php;</span><br><span class="line">autoindex off;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>IIS</p><p>设置“目录浏览”权限<img src="https://rvn0xsy.oss-cn-shanghai.aliyuncs.com/2017-11-15/0x08.png" alt="设置目录索引"> </p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      使用Web扫描器进行检测，设置不当导致的可向不用能访问的目录遍历
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：后台管理界面外网泄露</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2%E5%A4%96%E7%BD%91%E6%B3%84%E9%9C%B2/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2%E5%A4%96%E7%BD%91%E6%B3%84%E9%9C%B2/</id>
    <published>2020-02-28T15:09:08.000Z</published>
    <updated>2020-02-28T15:10:26.289Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Medium</p><p>安全要求：应保证应用系统的管理安全，后台管理界面（包括但不限于：可操作管理多个账号，具有账号权限功能增删改权限的用户界面；可发布公告等内容管理的用户界面；可查询应用日志系统日志账户；可更改应用系统界面内容配置账户）不能向互联网暴露。</p><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>网站后台管理系统主要是用于对网站前台的信息管理，如文字、图片、影音和其他日常使用文件的发布、更新、删除等操作，同时也包括会员信息、订单信息、访客信息的统计和管理等相关操作。简单来说就是对网站数据库和文件的快速操作和系统管理，方便前台内容的更新和管理。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      应保证应用系统的管理安全，后台管理界面（包括但不限于：可操作管理多个账号，具有账号权……
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：服务器路径泄露</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B7%AF%E5%BE%84%E6%B3%84%E9%9C%B2/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B7%AF%E5%BE%84%E6%B3%84%E9%9C%B2/</id>
    <published>2020-02-28T15:06:52.000Z</published>
    <updated>2020-02-28T15:08:26.295Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Medium</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：配置文件中对敏感信息进行加密，如数据库连接用户密码等</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>服务器在相应内容中可能存在系统目录路径信息，或者在上传的代码中包含数据库连接信息以及服务器信息，所以在配置文件中对于敏感信息要进行加密，防止敏感信息泄露。</p><h3 id="0x01-检测方法"><a href="#0x01-检测方法" class="headerlink" title="0x01 检测方法"></a>0x01 检测方法</h3><ul><li><p>各第三方平台当中</p><p>Github平台。很多开发者喜欢将信息传到此平台，其中可能有上传的代码中包含数据库连接信息以及服务器信息。</p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0177720.html" target="_blank" rel="noopener">wuyun实例：咕咚网github信息泄露</a></p></li><li><p>配置文件</p><p>很多XML文件中也存在数据库连接信息以及服务器信息</p><ul><li><p>svn</p><p>如果不能很好的进行加以限制或者删除，可能会导致相关源码泄露</p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0171105.html" target="_blank" rel="noopener">wooyun实例：乐视某分站SVN信息泄露</a></p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0173827.html" target="_blank" rel="noopener">wooyun实例：中国移动SVN信息泄露</a></p></li></ul></li><li><p>数据库文件</p><p>数据库相关的文件删除不当或摆放文件不当，可能会导致数据库敏感信息泄露</p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0200045.html" target="_blank" rel="noopener">wooyun实例：亚太财产保险数据库配置文件泄露</a></p></li></ul><h3 id="0x02-安全建议"><a href="#0x02-安全建议" class="headerlink" title="0x02 安全建议"></a>0x02 安全建议</h3><ul><li>定期检测第三平台是否存在泄露公司信息的存在，及时发现及时解决</li><li>配置文件信息进行加密处理，防止信息泄露</li><li>做好目录遍历，配置文件、文件遍历的防护工作</li><li>对于公司开发人员进行安全教育，培养良好工作方式。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      配置文件中对敏感信息进行加密，如数据库连接用户密码等
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：备份文件泄露</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/</id>
    <published>2020-02-28T15:04:51.000Z</published>
    <updated>2020-02-28T15:06:24.524Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：High</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：对网站直接进行漏洞扫描，查看可能存在的文件（.git .svn .zip）</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>在网站的升级和维护过程中，通常需要对网站中的文件进行修改。此时就需要对网站整站或者其中某一页面进行备份。</p><p>当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站Web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p><strong>漏洞成因</strong>：管理员将备份文件放在web服务器可以访问的目录下。</p><h3 id="0x01-漏洞危害"><a href="#0x01-漏洞危害" class="headerlink" title="0x01 漏洞危害"></a>0x01 漏洞危害</h3><ul><li>导致服务器整站源代码或者部分页面的源代码被下载，利用。源代码中所包含的各类敏感信息，如服务器数据库连接信息，服务器配置信息等会因此而泄露，造成巨大的损失。</li><li>被泄露的源代码可能被用于代码审计，进一步利用而对整个系统的安全埋下隐患。</li></ul><h3 id="0x02-泄露文件简述"><a href="#0x02-泄露文件简述" class="headerlink" title="0x02 泄露文件简述"></a>0x02 泄露文件简述</h3><ul><li><p><strong>Git文件</strong>： 表态文件使用git来进行同步发布到服务器，服务器指向指定待指定目录，随即被访问到。运行git init初始化代码库时，会在目录下生成一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候.git目录未删除，直接发布。使用这个文件可以恢复源代码。</p><p>漏洞利用工具：</p><p>GitHack: <a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a> </p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">GitHack</span>.</span></span>py http:<span class="comment">//www.example.com/.git/</span></span><br></pre></td></tr></tbody></table></figure><p>dvcs-ripper:  <a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">https://github.com/kost/dvcs-ripper</a> </p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-git.pl -v -u http:<span class="regexp">//</span>www.example.com<span class="regexp">/.git/</span></span><br></pre></td></tr></tbody></table></figure><p>常见漏洞地址：<a href="http://www.xxx.com/.git/" target="_blank" rel="noopener">http://www.xxx.com/.git/</a>     <a href="http://www.xxx.com/.git/config" target="_blank" rel="noopener">http://www.xxx.com/.git/config</a></p><p>利用rip-git.pl下载下来的文件可以查看上传github的历史记录。Githack不能查看记录。</p></li></ul><ul><li><p><strong>SVN文件泄露</strong>：Subversion，开放的源代码版本控制系统。Subversion采用的时客户端-服务端的结果，服务端存在着受控数据的SVN仓库，另一端时客户端程序，管理受控数据一部分在本地的映射，两端之间同通过仓库存取层（Repository Access,RA）的多条通道进行访问的.</p><p>常见漏洞地址：<a href="http://www.xxx.com/.svn/entries" target="_blank" rel="noopener">http://www.xxx.com/.svn/entries</a></p><p>漏洞利用工具：</p><p>dvcs-ripper: <a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">https://github.com/kost/dvcs-ripper</a> </p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-svn.pl -v -u http:<span class="regexp">//</span>www.example.com<span class="regexp">/.svn/</span></span><br></pre></td></tr></tbody></table></figure><p>Seay-Svn:  <a href="https://pan.baidu.com/s/1mrNpB" target="_blank" rel="noopener">https://pan.baidu.com/s/1mrNpB</a> </p><p>利用工具：seay svn信息泄露利用工具  dvcs-ripper</p></li><li><p><strong>zip文件泄露</strong>：在网站的使用过程中，往往需要对网站的文件进行修改、升级。此时就需要对网站整站或者其中某一页进行备份。当备份文件或修改过程中的缓存文件因为各种原因而被留在网站Web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p>漏洞形成的原因主要有以下两点：</p><ol><li>服务器管理员错误地将网站或网页的备份文件放置到服务器web目录下。</li><li>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在Web目录下。</li></ol></li></ul><h3 id="0x03-检测条件"><a href="#0x03-检测条件" class="headerlink" title="0x03 检测条件"></a>0x03 检测条件</h3><p>存在可通过构造路径，将备份文件下载出来。</p><p><strong>文件后缀：</strong>.rar   .zip    .tar.gz    .bak   .swp    .txt   .spl</p><h3 id="0x04-检测方法"><a href="#0x04-检测方法" class="headerlink" title="0x04 检测方法"></a>0x04 检测方法</h3><ul><li>通过对网站进行Web漏洞扫描，直接利用爬虫来爬取网站可能存在的路径以及链接，如果存在备份文件，则可通过Web直接进行下载。</li><li>自行构造字典，对网站的某一目录指定字典进行爆破，常见工具有wwwscan、御剑后台扫描工具等。</li></ul><h3 id="0x05-常见字典"><a href="#0x05-常见字典" class="headerlink" title="0x05 常见字典"></a>0x05 常见字典</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">/a.zip</span><br><span class="line">/web.zip</span><br><span class="line">/web.rar</span><br><span class="line">/1.rar</span><br><span class="line">/bbs.rar</span><br><span class="line">/www.root.rar</span><br><span class="line">/123.rar</span><br><span class="line">/data.rar</span><br><span class="line">/bak.rar</span><br><span class="line">/oa.rar</span><br><span class="line">/admin.rar</span><br><span class="line">/www.rar</span><br><span class="line">/2014.rar</span><br><span class="line">/2015.rar</span><br><span class="line">/2016.rar</span><br><span class="line">/2014.zip</span><br><span class="line">/2015.zip</span><br><span class="line">/2016.zip</span><br><span class="line">/2017.zip</span><br><span class="line">/2018.zip</span><br><span class="line">/2019.zip</span><br><span class="line">/2020.zip</span><br><span class="line">/1.zip</span><br><span class="line">/1.gz</span><br><span class="line">/1.tar.gz</span><br><span class="line">/2.zip</span><br><span class="line">/2.rar</span><br><span class="line">/123.rar</span><br><span class="line">/123.zip</span><br><span class="line">/a.rar</span><br><span class="line">/a.zip</span><br><span class="line">/admin.rar</span><br><span class="line">/back.rar</span><br><span class="line">/backup.rar</span><br><span class="line">/bak.rar</span><br><span class="line">/bbs.rar</span><br><span class="line">/bbs.zip</span><br><span class="line">/beifen.rar</span><br><span class="line">/beifen.zip</span><br><span class="line">/beian.rar</span><br><span class="line">/data.rar</span><br><span class="line">/data.zip</span><br><span class="line">/db.rar</span><br><span class="line">/db.zip</span><br><span class="line">/flashfxp.rar</span><br><span class="line">/flashfxp.zip</span><br><span class="line">/fdsa.rar</span><br><span class="line">/ftp.rar</span><br><span class="line">/gg.rar</span><br><span class="line">/hdocs.rar</span><br><span class="line">/hdocs.zip</span><br><span class="line">/HYTop.mdb</span><br><span class="line">/root.rar</span><br><span class="line">/Release.rar</span><br><span class="line">/Release.zip</span><br><span class="line">/sql.rar</span><br><span class="line">/test.rar</span><br><span class="line">/template.rar</span><br><span class="line">/template.zip</span><br><span class="line">/upfile.rar</span><br><span class="line">/vip.rar</span><br><span class="line">/wangzhan.rar</span><br><span class="line">/wangzhan.zip</span><br><span class="line">/web.rar</span><br><span class="line">/web.zip</span><br><span class="line">/website.rar</span><br><span class="line">/www.rar</span><br><span class="line">/www.zip</span><br><span class="line">/wwwroot.rar</span><br><span class="line">/wwwroot.zip</span><br><span class="line">/wz.rar</span><br><span class="line">/index.php.swp</span><br><span class="line">/index.php.bak</span><br><span class="line">/index.php.swo</span><br></pre></td></tr></tbody></table></figure><h3 id="0x06-修复方案"><a href="#0x06-修复方案" class="headerlink" title="0x06 修复方案"></a>0x06 修复方案</h3><ul><li>网站管理员严格检查web中可访问的路径下是否存在备份文件，常见的备份文件后缀为 .jsp.bak、.bak、.sql、.txt、等等。如果有这些文件，直接将该备份文件进行转移到其他目录或者直接删除即可。</li><li>严格控网站下可访问目录下的文件敏感的问题，不要将敏感文件置于该目录。</li></ul><h3 id="0x07-漏洞实例"><a href="#0x07-漏洞实例" class="headerlink" title="0x07 漏洞实例"></a>0x07 漏洞实例</h3><p><a href="https://shuimugan.com/bug/view?bug_no=149768" target="_blank" rel="noopener">酷狗手机游戏站备份文件泄露</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      在网站的升级和维护过程中，通常需要对网站中的文件进行修改。此时就需要对网站整站或者其中某一页面进行备份。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：安装文件未删除</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%E6%9C%AA%E5%88%A0%E9%99%A4/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%E6%9C%AA%E5%88%A0%E9%99%A4/</id>
    <published>2020-02-28T15:03:05.000Z</published>
    <updated>2020-02-28T15:04:31.828Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：High</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：对网站直接进行漏洞扫描，查看可能存在的文件（.setup .war）</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>WAR文件常见于Java应用中，WAR文件和JAR文件的格式是一样的，都是使用jar命令来创建。区别在于JAR文件的目的是把类和相关的资源封装到压缩的归档文件中，而WAR文件，一个WAR文件代表了一个Web应用程序，它可以包含Servlet、Html页面、Java类、图像文件、以及组成Web应用程序的其他资源，不仅仅是类的归档文件。 </p><p>web应用目录和文件很多时，将应用程序进行部署到其他机器上，如果全部复制，容易出现意外。利用war可以将servlet类文件和相关的资源集中起来一起发布。一个War文件就是一个web应用程序，指定.war扩展名，发布阶段使用War文件。</p><h3 id="0x01-文件信息泄露"><a href="#0x01-文件信息泄露" class="headerlink" title="0x01 文件信息泄露"></a>0x01 文件信息泄露</h3><p>WAR文件泄露是指部署的war文件由于配置不当，导致整个包文件以及其他重要配置文件信息泄露。例获取下面的配置文件：WEB-INF/jdbc.properties，jdbc.properties为数据库连接配置文件，其中包含数据库连接的账号、密码等重要信息。</p><p>发现这些配置文件时，可以利用配置文件找到真实路径信息，配置文件中的数据库连接信息，配置文件中的邮箱账号和密码等信息。</p><h3 id="0x02-测试方法"><a href="#0x02-测试方法" class="headerlink" title="0x02 测试方法"></a>0x02 测试方法</h3><ul><li>目录信息泄露，直接访问其对应的目录可以获取</li><li>扫描软件扫描获取，通过一些漏洞扫描工具扫描获取</li><li>通过shadon、zoomeye、fofa漏洞搜索引擎对关键字进行搜索</li><li>开源的敏感信息扫描工具BBSCan，<a href="https://github.com/liljiejie/BBScan" target="_blank" rel="noopener">https://github.com/liljiejie/BBScan</a></li></ul><h3 id="0x03-安全建议"><a href="#0x03-安全建议" class="headerlink" title="0x03  安全建议"></a>0x03  安全建议</h3><ul><li>对站点进行利用AWVS工具进行漏洞扫描</li><li>对敏感信息文件进行访问，在根目录下禁止打包，删除无关文件。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;严重性：High&lt;/p&gt;
&lt;p&gt;漏洞类型：敏感信息泄露&lt;/p&gt;
&lt;p&gt;安全要求：对网站直接进行漏洞扫描，查看可能存在的文件（.setup .war）&lt;/p&gt;
&lt;h3 id=&quot;0x00-简介&quot;&gt;&lt;a href=&quot;#0x00-简介&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：Web.xml配置文件泄露</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9AWeb-xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9AWeb-xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/</id>
    <published>2020-02-28T15:01:13.000Z</published>
    <updated>2020-02-28T15:02:45.971Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：高</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：配置文件中对敏感信息进行加密，如数据库连接用户密码等</p><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>Web.xml文件提供有关包含Web应用程序的Web组件的配置和部署信息，是WEB-INF目录下的安全目录。页面中直接访问的文件，必须通过web.xml文件对要访问的文件进行映射才能访问。</p><p>WEB-INF目录下主要包含的文件或目录：</p><ul><li>/WEB-INF/web.xml：是web应用程序配置文件，描述了servlet和其他的应用组件配置及命名规则。</li><li>/WEB-INF/classes/：包含站点的所有的class文件，包括servlet class和非servlet class</li><li>/WEB-INF/lib/：存放web应用所需的各种JAR文件，放置仅在这个应用中要求使用的jar文件，如数据库驱动jar文件</li><li>/WEB-INF/src/：源码目录，按照包名结构放置各个java文件</li><li>/WEB-INF/database.properties：数据库配置文件</li></ul><h3 id="0x01-漏洞成因"><a href="#0x01-漏洞成因" class="headerlink" title="0x01 漏洞成因"></a>0x01 漏洞成因</h3><p>通常Web应用会使用多个web服务器搭配使用，解决只有一个Web服务器的性能缺陷，以便做均衡负载和完成一些分层结构的安全策略等。使用时如果对静态资源目录或文件的映射配置不当，便会引发一些安全问题，导致web.xml等文件被读取。</p><h3 id="0x02-测试方式"><a href="#0x02-测试方式" class="headerlink" title="0x02 测试方式"></a>0x02 测试方式</h3><p>在域名后边添加/WEB-INF/web.xml尝试</p><h3 id="0x03-利用方式"><a href="#0x03-利用方式" class="headerlink" title="0x03 利用方式"></a>0x03 利用方式</h3><ul><li>找到Web.xml配置文件，查看配置信息，站点注释信息等</li><li>找到其他文件路径，对class文件进行反编译，得大网站源码。</li></ul><h3 id="0x04-Wooyun实例"><a href="#0x04-Wooyun实例" class="headerlink" title="0x04 Wooyun实例"></a>0x04 Wooyun实例</h3><p>​        泛华保险集团Web.xml文件泄露：  <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2016-0194183.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2016-0194183.html</a> </p><p>​        欧朋浏览器多站配置不当泄露敏感信息：  <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2015-094544.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2015-094544.html</a> </p><p>​        去哪儿任意文件读取:  <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2012-07329.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2012-07329.html</a> </p><p>​        百度某应用beudou(北斗)架构遍历：  <a href="https://wooyun.x10sec.org/static/bugs/wooyun-2012-011730.html" target="_blank" rel="noopener">https://wooyun.x10sec.org/static/bugs/wooyun-2012-011730.html</a> </p><h3 id="0x05-修复建议"><a href="#0x05-修复建议" class="headerlink" title="0x05 修复建议"></a>0x05 修复建议</h3><p>修改Nginx配置文件禁止访问WEB-INF目录</p><p>location ~^/WEB-INF/*{deny all;}或者return 404</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      配置文件中对敏感信息进行加密，如数据库连接用户密码等
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：Tomcat示例文件未删除</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9ATomcat%E7%A4%BA%E4%BE%8B%E6%96%87%E4%BB%B6%E6%9C%AA%E5%88%A0%E9%99%A4/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9ATomcat%E7%A4%BA%E4%BE%8B%E6%96%87%E4%BB%B6%E6%9C%AA%E5%88%A0%E9%99%A4/</id>
    <published>2020-02-28T14:59:10.000Z</published>
    <updated>2020-02-28T15:00:44.925Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Low</p><p>-漏洞类型：敏感信息泄露</p><p>安全要求：查看tomcat示例文件是否可正常访问</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>Apache Tomcat默认安装包含“servlets-examples”和“tomcat-docs”目录，该目录包含许多示例servlet和JSP。其中一些示例存在安全风险，不应该部署在生产服务器上。</p><p>例：<a href="http://localhost:8080/examples/servlets/servlet/SessionExample示例允许用户进行会话操作。此会话是全局的，所以示例则会带来很大的安全风险，攻击者可能通过操纵其会话来有效的成为管理员。" target="_blank" rel="noopener">http://localhost:8080/examples/servlets/servlet/SessionExample示例允许用户进行会话操作。此会话是全局的，所以示例则会带来很大的安全风险，攻击者可能通过操纵其会话来有效的成为管理员。</a></p><p>受影响范围：所有版本的Tomcat</p><h3 id="0x01-测试流程"><a href="#0x01-测试流程" class="headerlink" title="0x01 测试流程"></a>0x01 测试流程</h3><p>创建测试文件<a href="http://localhost:8080/examples/session.jsp，主要是获得session的skey值，并打印出来，代码如下：" target="_blank" rel="noopener">http://localhost:8080/examples/session.jsp，主要是获得session的skey值，并打印出来，代码如下：</a></p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=ISO-8859-1"</span> pageEncoding=<span class="string">"gbk"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"com.servlet.*"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=ISO-8859-1"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String skey = (String)session.getAttribute(<span class="string">"skey"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h2&gt;</span><br><span class="line">Welcome to <span class="string">"&lt;%= skey%&gt;"</span> Login System!</span><br><span class="line">&lt;/h2&gt;</span><br><span class="line">This is the first javaWeb Project!</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure><p>页面访问结果如下：</p><p> <img src="https://img-blog.csdnimg.cn/20190221091721960.png" alt="在这里插入图片描述"> </p><p>访问<a href="http://localhost:8080/examples/servlets/servlet/SessionExample，填写session" target="_blank" rel="noopener">http://localhost:8080/examples/servlets/servlet/SessionExample，填写session</a> name=skey，session value = session test,提交结果如下：</p><p> <img src="https://img-blog.csdnimg.cn/20190221091752912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FsZXhfYmVhbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"> </p><p>再次访问<a href="http://localhost:8080/examples/servlets/session.jsp页面，查看结果：" target="_blank" rel="noopener">http://localhost:8080/examples/servlets/session.jsp页面，查看结果：</a></p><p> <img src="https://img-blog.csdnimg.cn/20190221091814787.png" alt="img"> </p><p>注：同一个tomcat下，不同的项目之间的session不能共享。所以”Apache Tomcat”示例目录漏洞“对其他项目威胁不大，但任然建议部署环境中删除tomcat示例。</p><h3 id="0x02-修复方案"><a href="#0x02-修复方案" class="headerlink" title="0x02 修复方案"></a>0x02 修复方案</h3><p>通常情况下，无需使用样例功能，建议部署完Tomcat后直接删除<code>servlets-examples</code>和<code>tomcat-docs</code>目录。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      查看tomcat示例文件是否可正常访问
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：JS文件敏感信息泄露</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9AJS%E6%96%87%E4%BB%B6%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9AJS%E6%96%87%E4%BB%B6%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</id>
    <published>2020-02-28T14:56:11.000Z</published>
    <updated>2020-02-28T14:58:27.552Z</updated>
    
    <content type="html"><![CDATA[<p>严重性：Medium</p><p>漏洞类型：敏感信息泄露</p><p>安全要求：前端js文件中，不应该存在敏感信息，如账户、密码、文件路径等。</p><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>JS泄露敏感信息可以让攻击者轻松的收集用户手机号、姓名等隐私信息，也有可能利用进入网站后台或者是Getshell。</p><h3 id="0x01-漏洞成因"><a href="#0x01-漏洞成因" class="headerlink" title="0x01 漏洞成因"></a>0x01 漏洞成因</h3><p>javascrip相当于一种简答但功能强大的客户端脚本语言，属于解释性语言，执行的时候是一边解释一边运行。以上特性导致JavaScript源代码经常存在泄露的问题。一些粗心的开发者经常将各种敏感信息存储在JavaScript脚本中，因为JS是解释型语言，所以攻击者可以看到JS源文件，从而导致对Web服务和用户隐私造成不同的威胁。</p><h3 id="0x02-漏洞分类及利用"><a href="#0x02-漏洞分类及利用" class="headerlink" title="0x02 漏洞分类及利用"></a>0x02 漏洞分类及利用</h3><p>根据泄露的内容、利用方式以及待带来的危害不同，可以将JS文件敏感信息漏洞分为三类：</p><h4 id="JS文件泄露后台管理敏感路径以及API"><a href="#JS文件泄露后台管理敏感路径以及API" class="headerlink" title="JS文件泄露后台管理敏感路径以及API"></a>JS文件泄露后台管理敏感路径以及API</h4><p>此类问题主要存在与后台登录页面以及类似网页内引入的JS文件中。在对企业做渗透测试时，遇到后台利用SQL注入或者路径爆破都无法进入后台时，可以尝试寻找是否存在此类漏洞，说不定后台登录页面下引入的JS文件暴露的后台路径就会成为突破口。如果网站没有对是否登录状态做验证，攻击者就可以利用未授权访问暴露的API，实现纂改前段内容，甚至是getshell。</p><p><strong>测试步骤</strong>：</p><ol><li>进入待测试登录页面</li><li>F12查看网页源文件</li><li>去检测有无JS文件，同时看js文件中是否存在敏感信息</li><li>如果js文件中的URL泄露了后台功能实现的API，攻击者可以无需登录直接进行未授权操作。</li></ol><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2012-013530.html" target="_blank" rel="noopener">【乌云实例：腾讯JS文件泄露URL】</a></p><h4 id="页面内JS泄露http-only保护的cookie"><a href="#页面内JS泄露http-only保护的cookie" class="headerlink" title="页面内JS泄露http-only保护的cookie"></a>页面内JS泄露http-only保护的cookie</h4><p>XSS常见利用手段是劫持用户Cookie并登录其账户，但是添加了http-only标记的cookie客户端脚本无法进行读取，因此cookie设置了http-only可以减少XSS带来的危害。</p><p>不过在当下存在开发者将受http-only保护的cookie写入到页面，导致攻击者可以利用crossdoamin.xml配置不当等漏洞，轻松跨域读取到受保护的cookie，从而登录用户账户。</p><p><a href="[https://github.com/iikira/BaiduPCS-Go/wiki/%E5%85%B3%E4%BA%8E-%E8%8E%B7%E5%8F%96%E7%99%BE%E5%BA%A6-BDUSS](https://github.com/iikira/BaiduPCS-Go/wiki/关于-获取百度-BDUSS)">【如何获取百度BDUSS】</a> 注：BDUSS含义：浏览器登录百度帐号成功以后, 百度服务器会在浏览器本地存储 Cookie 数据, 这样每次打开百度网站的时候, 就不需要重新登录百度帐号了.BDUSS 属于这些 Cookie 数据的一部分, 可以通过百度BDUSS,来实现模拟登录百度帐号。</p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2014-072951.html" target="_blank" rel="noopener">【乌云实例：百度泄露受http-only保护的cookie】</a></p><h4 id="页面内JS以及AJAX请求泄露用户敏感信息"><a href="#页面内JS以及AJAX请求泄露用户敏感信息" class="headerlink" title="页面内JS以及AJAX请求泄露用户敏感信息"></a>页面内JS以及AJAX请求泄露用户敏感信息</h4><p>此类漏洞常见于网站评论功能实现处。此漏洞获取用户敏感信息比通过jsonp漏洞更加便捷容易。存在开发者疏忽直接在页面的js以及AJAX请求中返回的内容中直接输出参与评论用户的敏感信息，导致攻击者可以轻松获取用户的手机号、真实姓名、注册邮箱、住址甚至用户手机的<a href="https://baike.baidu.com/item/IMEI" target="_blank" rel="noopener">IMEI</a> 。</p><p>此处可以利用爬虫获取大量的用户敏感信息。</p><p> （下图：泄露评论的用户邮箱、手机号）<img src="https://wooyun.x10sec.org/static/drops/full/9a973017d2be97d3bafc104f47bb8443d770e994.jpg" alt="enter image description here"> </p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2014-049775.html" target="_blank" rel="noopener">【乌云实例：百度XX获取用户手机号】</a></p><p><a href="https://wooyun.x10sec.org/static/bugs/wooyun-2014-049759.html" target="_blank" rel="noopener">【乌云实例：百度某音乐泄露用户手机号与邮箱】</a></p><h3 id="0x03-漏洞挖掘和检测"><a href="#0x03-漏洞挖掘和检测" class="headerlink" title="0x03 漏洞挖掘和检测"></a>0x03 漏洞挖掘和检测</h3><p>以上三种类型漏洞存在共同的检测方式，在源代码中搜索（Ctrl+F）常见泄露的关键词“phone”、”email”、“ip”等等。</p><p>第一种：查看页面引入的JS文件，其中查找类似 .html、.do、.action等关键词</p><p>第二、三种：利用Fiddler之类工具进行抓包查看服务器响应的内容</p><p>也可以自行编写Chrome插件自行添加检测规则</p><h3 id="0x04-漏洞修复与防范"><a href="#0x04-漏洞修复与防范" class="headerlink" title="0x04 漏洞修复与防范"></a>0x04 漏洞修复与防范</h3><ul><li>不把敏感信息直接存储在页面内的JS和ajax请求响应内容中</li><li>开发者应该提高安全意识，安全开发</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      前端js文件中，不应该存在敏感信息，如账户、密码、文件路径等。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="敏感信息泄露" scheme="https://comosk.github.io/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：账号可同时登录</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E8%B4%A6%E5%8F%B7%E5%8F%AF%E5%90%8C%E6%97%B6%E7%99%BB%E5%BD%95/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E8%B4%A6%E5%8F%B7%E5%8F%AF%E5%90%8C%E6%97%B6%E7%99%BB%E5%BD%95/</id>
    <published>2020-02-28T14:30:49.000Z</published>
    <updated>2020-02-28T14:35:06.364Z</updated>
    
    <content type="html"><![CDATA[<p>安全性：Medium</p><p>漏洞类型：会话管理</p><p>安全要求：应能对单个账号的重复登录（同一账号同时在不同的终端上登录）进行限制（原则上不超过2个），出现重复登录时，给出明确提示。</p><h3 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h3><p>需要解决的四个问题：</p><ul><li>实现在线用户列表</li><li>单个账号在多个终端上进行登录时，进行与用户提示并与退出前一次登录</li><li>关闭浏览器，session失效，该session对应当前登录用户将会从在线列表中移除</li><li>用户正常退出，session失效，该session对应当前登录用户将从在线列表中移除</li></ul><h3 id="0x01-实现思想"><a href="#0x01-实现思想" class="headerlink" title="0x01 实现思想"></a>0x01 实现思想</h3><p>用户登录时，会创建一个session，用于保存用户信息。将所有用户登录时的session值与ID存入ServletContext中，显示在线列表时，就会从ServletContext中取得用户登录的sesson值，从中取得用户信息。</p><ul><li>账号未登录，则第一次登录将用户信息置于用户在线容器列表</li><li>账号已登录，判断是否异地重复登录，重复登录就移除上一次登录，将其失效，把最新登录会话置于用户在线列表中</li></ul><ol><li>登录：先从ServletContext中取出存放用户登录得session相关信息，检查列表，如果已经存在相同得登录信息，则说明用户之前已经登录过，移除前面得记录，再次将此次登录信息加入到ServlertContext中。</li><li>监听：实现SessionListener类，当session失效的时候，从ServletContext中移除相应记录。</li><li>过滤：过滤所有页面，session失效后转向登录页面。但是要实现用户二次登录后强制先前的登录失效，登录时存入的是seesion值与ID值，session值是相同的，但是ID却不相同。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      应能对单个账号的重复登录（同一账号同时在不同的终端上登录）进行限制（原则上不超过2个），出现重复登录时，给出明确提示。
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="会话管理" scheme="https://comosk.github.io/tags/%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：未启用会话超时功能</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E6%9C%AA%E5%90%AF%E7%94%A8%E4%BC%9A%E8%AF%9D%E8%B6%85%E6%97%B6%E5%8A%9F%E8%83%BD/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E6%9C%AA%E5%90%AF%E7%94%A8%E4%BC%9A%E8%AF%9D%E8%B6%85%E6%97%B6%E5%8A%9F%E8%83%BD/</id>
    <published>2020-02-28T14:28:16.000Z</published>
    <updated>2020-02-28T14:30:14.994Z</updated>
    
    <content type="html"><![CDATA[<p>安全性：中</p><p>漏洞类型：会话管理</p><p>安全要求：具有登录功能的互联网网站及APP应具有会话超时退出机制，系统涉及交易支付和查询，个人信息修改等页面，需重新对用户进行认证且会话超时时间不得大于15分钟，认证方式可选择密码、短信等。</p><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>为了控制攻击者对活动会话的攻击及劫持时间为最小，必须为每个会话设置过期时间。如果Web应用程序的会话过期设置不足，将会增加基于会话的攻击风险，因为攻击者可以重用有效的会话ID并劫持关联的会话。</p><p>会话间隔越短，攻击者能使用有效会话ID的时间就越少。会话过期时间需要根据Web应用程序的目的与特性进行设置，并在安全性和可用性之间取得平衡，保证用户可以轻松的完成Web应用程序的操作，不会频繁因为会话过期而中断操作。空闲时间与过期时间与web应用程序的重要性密切相关，对于高风险应用，常用的闲置时间范围为2-5分钟，而低风险的应用程序则为15-30分钟。当会话到期时，web应用程序必须主动采取措施来使客户端与服务端的会话失效。</p><h3 id="0x01-会话过期方式"><a href="#0x01-会话过期方式" class="headerlink" title="0x01 会话过期方式"></a>0x01 会话过期方式</h3><h4 id="1-1-自动会话超时"><a href="#1-1-自动会话超时" class="headerlink" title="1.1 自动会话超时"></a>1.1 自动会话超时</h4><ul><li><p><strong>空闲超时</strong></p><p>在Web应用程序中，所有会话都应该实现空闲或者不活动超时，此超时定义了会话在没有活动的情况下所保持的时间，即给定的会话ID从接收到最后一个HTTP请求到它失效的这段空闲时间。空闲超时限制了攻击者猜测和使用来自用户的有效会话ID的可能性，但是，如果攻击者已经劫持了给定的会话，则空闲超时不会限制攻击者的行为，因为它可以定期进行会话活动，以使会话保持较长时间的活动状态。如果客户端用于执行会话超时，例如使用会话令牌或其他客户端参数作为时间参数，那么攻击者可以操纵这些参数以延长会话的持续时间，因此会话超时管理必须在服务端进行。</p></li><li><p><strong>绝对超时</strong></p><p>无论会话活动如何，所有绘画都会被实现绝对超时。此超时定义了会话可以处于活动状态的最长时间，从Web应用创建会话开始计时，定义绝对时间段内关闭会话。会话无效后，用户只能在web应用程序中再次进行认证并建立新的会话。绝对会话限制了攻击者可以使用别劫持会话及冒充受害者的时间。</p></li><li><p><strong>更新超时</strong></p><p>Web应用程序可以实现额外的更新超时，实现会话ID的自动更新，它在用户会话有效期期间内独立于会话活动，因此与空闲超时无关。在最初创建的特定时间段之后，web应用程序可以为用户会话重新生成一个新的会话ID，并尝试在客户端上对其进行设置及更新。在客户端知道新ID并开始使用之前，旧的会话ID仍然有效；客户端切换到新ID，应用程序将使先前的ID失效。</p><p>这种机制减少了给定会话ID的使用时间，特别是会话ID被攻击者劫持的时间。如果用户会话在合法的客户端上打开并保持活动，那么每当更新超时到期，会定期更新其关联的会话ID。因此，更新超时补充了空闲超时和绝对超时，特别是绝对超时随着会话时间进行扩展时。</p><p>但这种也存在竞争的情况：攻击者使用先前有效的会话ID在受害者之前发送请求，紧接着更新超时到期，这样攻击者就是先一步的到更新的会话ID值。但这种情况下，用户的会话ID会突然终止，关联的ID会突然失效，至少让用户意识到了自己遭受到了攻击。</p></li></ul><h4 id="1-2-手动会话超时"><a href="#1-2-手动会话超时" class="headerlink" title="1.2 手动会话超时"></a>1.2 手动会话超时</h4><p>​    web应用程序应该提供一种机制，让用户完成完web应用程序后主动关闭会话。 </p><p>​    注销按钮：Web应用程序必须提供一个可见的易于访问的注销按钮，一般时放置程序的头部或菜单上，        并且可以从每个资源或页面上访问，让用户可以在任何时候手动关闭会话。如上所述，Web应用程序必须在    服务端使会话无效。</p><p>​    注：并非每个程序都实现了便于关闭会话的机制，用户可以使用增强功能去注销会话。比如FireFox浏览器的附加组件PopU Logout。</p><h4 id="1-3-网页内容缓存"><a href="#1-3-网页内容缓存" class="headerlink" title="1.3 网页内容缓存"></a>1.3 网页内容缓存</h4><p>会话关闭后可以通过Web浏览器的缓存来访问会话内交换的隐私数据，所以Web应用程序必须对HTTP和HTTPS交换的所有Web流量使用限制缓存指令，如HTTP头或META标签使用Cache-Control:no-cache,no-store和Pragma:no-cache配置。</p><p>如果允许缓存，允许Web客户端缓存除会话ID外的所有内容。</p><h3 id="0x02-思考？"><a href="#0x02-思考？" class="headerlink" title="0x02 思考？"></a>0x02 思考？</h3><p><u>如何实现主动式会话过期提醒？？</u></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      具有登录功能的互联网网站及APP应具有会话超时退出机制，系统涉及交易支付和查询
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="会话管理" scheme="https://comosk.github.io/tags/%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>漏洞名称：会话固定</title>
    <link href="https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BC%9A%E8%AF%9D%E5%9B%BA%E5%AE%9A/"/>
    <id>https://comosk.github.io/2020/02/28/%E6%BC%8F%E6%B4%9E%E5%90%8D%E7%A7%B0%EF%BC%9A%E4%BC%9A%E8%AF%9D%E5%9B%BA%E5%AE%9A/</id>
    <published>2020-02-28T14:25:05.000Z</published>
    <updated>2020-02-28T14:27:53.070Z</updated>
    
    <content type="html"><![CDATA[<p>安全性：Medium</p><p>漏洞类型：会话管理</p><p>安全要求：用户注销会话后，不能通过使用浏览器的回退按钮来显示</p><h3 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h3><ul><li>无状态的HTTP与会话：由于HTTP是无状态的服务，容器为了在同一个用户的不同请求之间保持状态，为每个状态维持一个会话，Servlet容器一般就是HttpSession对象。HTTP客户端每次请求时，都需要把HTTPSession对象的ID(类似JSEESIONID)传递过来，JSEESIONID的传递机制通常是作为URL的一部分或者放置在Cookie中。在第一次请求时，由于没有JSEESIONID，容器会创建一个HTTPSession对象，把它的ID作为JSEESSIONID进行传递，容器中根据这个ID值找到HTTPSession对象。</li><li>登陆与注销前后，如果这个JSESSIONID不会改变，则表示存在会话固定的漏洞。登录前，用户第一次请容器，容器生成一个HttpSession对象，设置JSESSIONID,但这个JSESSIONID是未验证的，如果这个JSEESIONID被恶意用户获取到,那么用户登录后，这个JSEESSIONID变成有效的以后，恶意用户就可以用JSESSIONID来伪冒用户</li></ul><h3 id="0x02-修复建议"><a href="#0x02-修复建议" class="headerlink" title="0x02 修复建议"></a>0x02 修复建议</h3><p>登录成功后作废登录前的会话，注销成功后作废之前的合法会话。</p><p>注销后需要调用HttpSession.invalidate()方法来作废合法的HTTPSession对象，不然会导致内存泄露，因为未注销的httpSession对象只有在超时后才会被回收。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      用户注销会话后，不能通过使用浏览器的回退按钮来显示
    
    </summary>
    
    
      <category term="Web安全" scheme="https://comosk.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="会话管理" scheme="https://comosk.github.io/tags/%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
